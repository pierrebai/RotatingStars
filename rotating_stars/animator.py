from .star import star

class animator:
    """
    Animates the steps to generate the rotating polygons generated
    by rotating inners circle inside a larger circle and forming a star.
    """

    def __init__(self, star: star):
        self.star = star

    def reset(self):
        """
        Reset the animator entirely.
        """
        pass

    def generate_outer_circle(self):
        """
        Draw the outer circle inside which the star will be made.
        """
        pass

    def generate_inner_circle(self):
        """
        Draw the inner circle with a radius a fraction of the outer circle.
        That fraction is given as the ratio.
        """
        pass

    def generate_inner_circle_dot(self):
        """
        Draw the dot on the inner circle at the radius ratio given.
        The ratio should be between 0 and 1.
        """
        pass

    def generate_star(self):
        """
        Draw the star by rotating the inner circle leaving a trail
        formed by the dot on the inner circle, forming the star.
        """
        pass

    def generate_other_inner_circle_dots(self):
        """
        Draw the other dots on the inner circle that are added
        when the circle passes over the star's spikes.
        """
        pass

    def generate_inner_circle_polygon(self):
        """
        Draw the polygon generated by the inner circle dots.
        """
        pass

    def duplicate_inner_circle(self):
        """
        Draw the additional inner circles and their dots and polygon.
        """
        pass

    def generate_inter_circle_polygons(self):
        """
        Draw the polygon generated by the corresponding dots
        in all inner circles.
        """
        pass

    def animate_all(self):
        """
        Animate all the inner circles and their polygons.
        """
        pass
